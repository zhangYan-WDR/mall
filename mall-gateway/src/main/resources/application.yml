spring:
  cloud:
    gateway:
      routes: # 路由配置
        - id: test-baidu # 路由的id，没有固定规则但要求唯一，建议配合服务名
          uri: https://www.baidu.com # 匹配后提供服务的路由地址
          filters: # 过滤器
            - StripPrefix=1 # 去掉请求前缀
          predicates: # 断言，路由匹配条件
            - Query=url,baidu # 匹配的路径
        - id: test-qq # 路由的id，没有固定规则但要求唯一，建议配合服务名
          uri: https://www.qq.com # 匹配后提供服务的路由地址
          filters: # 过滤器
            - StripPrefix=1 # 去掉请求前缀
          predicates: # 断言，路由匹配条件
            - Query=url,qq # 匹配的路径

        #路由分高低优先级，从上往下
        - id: product_route
          uri: lb://mall-product
          predicates:
            - Path=/api/product/**
          filters:
            - RewritePath=/api/(?<segment>.*), /$\{segment} # 重写路径

        - id: third_party_route
          uri: lb://mall-third-party
          predicates:
            - Path=/api/thirdparty/**
          filters:
            - RewritePath=/api/thirdparty/(?<segment>.*), /$\{segment} # 重写路径

        - id: admin_route # 路由的id，没有固定规则但要求唯一，建议配合服务名
          uri: lb://renren-fast # 匹配后提供服务的路由地址
          predicates: # 断言，路由匹配条件
            - Path=/api/** # 匹配的路径
          filters:
            - RewritePath=/api/(?<segment>.*), /renren-fast/$\{segment} # 重写路径
